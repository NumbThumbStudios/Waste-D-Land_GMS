<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_PreStage_Head_Naked_Idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initial Variables

mySock = 111;
isMine = false;
cName  = "Oops...";
cHead  = "";
cTorso = "";
cLegs  = "";

animSpeed = .3;
state = "Waiting";

myDice = noone;
myRoll = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set Animations + Speed
image_speed = animSpeed;

switch(state)
{
    case "Waiting":
        sprite_index = spr_PreStage_Head_Naked_Idle;
    break;
    
    case "Jump":
        sprite_index = spr_PreStage_Head_Naked_Jump;
        
        if(image_index &gt; sprite_get_number(sprite_index) - 1)
        {
            state = "Fall";
            image_index = 0;
            
            myDice.state = "Hit";
            myDice.image_index = 0;
        }
    break;
    
    case "Fall":
        sprite_index = spr_PreStage_Head_Naked_Fall;
        
        if(image_index &gt; sprite_get_number(sprite_index) - 1)
        {
            state = "Done";
            image_index = 0;
        }
    break;
    
    case "Done":
        sprite_index = spr_PreStage_Head_Naked_Idle;
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// ACTION!

if(instance_exists(obj_Client))
{
    if(real(mySocketID) == real(mySock))
    {
        switch(state)
        {
            case "Waiting":
                // Change our Characters state/animation
                state = "Jump";
                image_index = 0;
                
                // Roll our dice!
                randomize();
                myRoll = irandom_range(1,6);
                myDice.currentRoll = myRoll;
                
                // Send previous data to the server
                buffer_seek(obj_Client.buffer, buffer_seek_start, 0);
                buffer_write(obj_Client.buffer, buffer_string, "PreGame - To Server");
                buffer_write(obj_Client.buffer, buffer_string, "My Dice Roll");
                buffer_write(obj_Client.buffer, buffer_u8, myRoll);
                network_send_packet(obj_Client.client, obj_Client.buffer, buffer_tell(obj_Client.buffer));
            break;
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw our character on screen

switch(state)
{
    case "Done":
    case "Waiting":
        // Draw Legs
        var myLegs = "";
        if(cLegs == "Naked") { myLegs = spr_PreStage_Legs_Naked_Idle; }
        else
        if(cLegs == "Punker01") { myLegs = spr_PreStage_Legs_Punker01_Idle; }
        else
        if(cLegs == "Sports01") { myLegs = spr_PreStage_Legs_Sports01_Idle; }
        draw_sprite(myLegs,image_index,x,y);
        
        // Draw Torso
        var myTorso = "";
        if(cTorso == "Naked") { myTorso = spr_PreStage_Torso_Naked_Idle; }
        else
        if(cTorso == "Punker01") { myTorso = spr_PreStage_Torso_Punker01_Idle; }
        else
        if(cTorso == "Sports01") { myTorso = spr_PreStage_Torso_Sports01_Idle; }
        draw_sprite(myTorso,image_index,x,y);
        
        // Draw Head
        var myHead = "";
        if(cHead == "Naked") { myHead = spr_PreStage_Head_Naked_Idle; }
        else
        if(cHead == "Punker01") { myHead = spr_PreStage_Head_Punker01_Idle; }
        else
        if(cHead == "Sports01") { myHead = spr_PreStage_Head_Sports01_Idle; }
        draw_sprite(myHead,image_index,x,y);
    break;
    
    case "Jump":
        // Draw Legs
        var myLegs = "";
        if(cLegs == "Naked") { myLegs = spr_PreStage_Legs_Naked_Jump; }
        else
        if(cLegs == "Punker01") { myLegs = spr_PreStage_Legs_Punker01_Jump; }
        else
        if(cLegs == "Sports01") { myLegs = spr_PreStage_Legs_Sports01_Jump; }
        draw_sprite(myLegs,image_index,x,y);
        
        // Draw Torso
        var myTorso = "";
        if(cTorso == "Naked") { myTorso = spr_PreStage_Torso_Naked_Jump; }
        else
        if(cTorso == "Punker01") { myTorso = spr_PreStage_Torso_Punker01_Jump; }
        else
        if(cTorso == "Sports01") { myTorso = spr_PreStage_Torso_Sports01_Jump; }
        draw_sprite(myTorso,image_index,x,y);
        
        // Draw Head
        var myHead = "";
        if(cHead == "Naked") { myHead = spr_PreStage_Head_Naked_Jump; }
        else
        if(cHead == "Punker01") { myHead = spr_PreStage_Head_Punker01_Jump; }
        else
        if(cHead == "Sports01") { myHead = spr_PreStage_Head_Sports01_Jump; }
        draw_sprite(myHead,image_index,x,y);
    break;
    
    case "Fall":
        // Draw Legs
        var myLegs = "";
        if(cLegs == "Naked") { myLegs = spr_PreStage_Legs_Naked_Fall; }
        else
        if(cLegs == "Punker01") { myLegs = spr_PreStage_Legs_Punker01_Fall; }
        else
        if(cLegs == "Sports01") { myLegs = spr_PreStage_Legs_Sports01_Fall; }
        draw_sprite(myLegs,image_index,x,y);
        
        // Draw Torso
        var myTorso = "";
        if(cTorso == "Naked") { myTorso = spr_PreStage_Torso_Naked_Fall; }
        else
        if(cTorso == "Punker01") { myTorso = spr_PreStage_Torso_Punker01_Fall; }
        else
        if(cTorso == "Sports01") { myTorso = spr_PreStage_Torso_Sports01_Fall; }
        draw_sprite(myTorso,image_index,x,y);
        
        // Draw Head
        var myHead = "";
        if(cHead == "Naked") { myHead = spr_PreStage_Head_Naked_Fall; }
        else
        if(cHead == "Punker01") { myHead = spr_PreStage_Head_Punker01_Fall; }
        else
        if(cHead == "Sports01") { myHead = spr_PreStage_Head_Sports01_Fall; }
        draw_sprite(myHead,image_index,x,y);
    break;
}

// Draw Name
draw_set_color(make_colour_rgb(25,25,25));
draw_set_halign(fa_center);
draw_set_valign(fa_top);
draw_text(x,y+24,string(cName));

//draw_text(x,y+54,"("+string(mySock)+"/"+string(mySocketID)+")");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
